// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: httpRequest.proto

#include "httpRequest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace networkLearn {
class requestLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<requestLine>
      _instance;
} _requestLine_default_instance_;
class requestHeadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<requestHead>
      _instance;
} _requestHead_default_instance_;
class mainContentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<mainContent>
      _instance;
} _mainContent_default_instance_;
class httpRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<httpRequest>
      _instance;
} _httpRequest_default_instance_;
}  // namespace networkLearn
namespace protobuf_httpRequest_2eproto {
void InitDefaultsrequestLineImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::networkLearn::_requestLine_default_instance_;
    new (ptr) ::networkLearn::requestLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::networkLearn::requestLine::InitAsDefaultInstance();
}

void InitDefaultsrequestLine() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsrequestLineImpl);
}

void InitDefaultsrequestHeadImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::networkLearn::_requestHead_default_instance_;
    new (ptr) ::networkLearn::requestHead();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::networkLearn::requestHead::InitAsDefaultInstance();
}

void InitDefaultsrequestHead() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsrequestHeadImpl);
}

void InitDefaultsmainContentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::networkLearn::_mainContent_default_instance_;
    new (ptr) ::networkLearn::mainContent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::networkLearn::mainContent::InitAsDefaultInstance();
}

void InitDefaultsmainContent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsmainContentImpl);
}

void InitDefaultshttpRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_httpRequest_2eproto::InitDefaultsrequestLine();
  protobuf_httpRequest_2eproto::InitDefaultsrequestHead();
  protobuf_httpRequest_2eproto::InitDefaultsmainContent();
  {
    void* ptr = &::networkLearn::_httpRequest_default_instance_;
    new (ptr) ::networkLearn::httpRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::networkLearn::httpRequest::InitAsDefaultInstance();
}

void InitDefaultshttpRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultshttpRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::networkLearn::requestLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::networkLearn::requestLine, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::networkLearn::requestLine, pathtoresource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::networkLearn::requestLine, httpversion_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::networkLearn::requestHead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::networkLearn::requestHead, headtemp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::networkLearn::mainContent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::networkLearn::mainContent, bodytemp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::networkLearn::httpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::networkLearn::httpRequest, resline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::networkLearn::httpRequest, reshead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::networkLearn::httpRequest, crlf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::networkLearn::httpRequest, body_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::networkLearn::requestLine)},
  { 8, -1, sizeof(::networkLearn::requestHead)},
  { 14, -1, sizeof(::networkLearn::mainContent)},
  { 20, -1, sizeof(::networkLearn::httpRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::networkLearn::_requestLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::networkLearn::_requestHead_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::networkLearn::_mainContent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::networkLearn::_httpRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "httpRequest.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021httpRequest.proto\022\014networkLearn\"J\n\013req"
      "uestLine\022\016\n\006method\030\001 \001(\t\022\026\n\016pathToResour"
      "ce\030\002 \001(\t\022\023\n\013httpVersion\030\003 \001(\t\"\037\n\013request"
      "Head\022\020\n\010headTemp\030\001 \001(\t\"\037\n\013mainContent\022\020\n"
      "\010bodyTemp\030\001 \001(\t\"\234\001\n\013httpRequest\022*\n\007resLi"
      "ne\030\001 \001(\0132\031.networkLearn.requestLine\022*\n\007r"
      "esHead\030\002 \001(\0132\031.networkLearn.requestHead\022"
      "\014\n\004CRLF\030\003 \001(\t\022\'\n\004body\030\004 \001(\0132\031.networkLea"
      "rn.mainContentb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 342);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "httpRequest.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_httpRequest_2eproto
namespace networkLearn {

// ===================================================================

void requestLine::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int requestLine::kMethodFieldNumber;
const int requestLine::kPathToResourceFieldNumber;
const int requestLine::kHttpVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

requestLine::requestLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_httpRequest_2eproto::InitDefaultsrequestLine();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:networkLearn.requestLine)
}
requestLine::requestLine(const requestLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method().size() > 0) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  pathtoresource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pathtoresource().size() > 0) {
    pathtoresource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pathtoresource_);
  }
  httpversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.httpversion().size() > 0) {
    httpversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.httpversion_);
  }
  // @@protoc_insertion_point(copy_constructor:networkLearn.requestLine)
}

void requestLine::SharedCtor() {
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pathtoresource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  httpversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

requestLine::~requestLine() {
  // @@protoc_insertion_point(destructor:networkLearn.requestLine)
  SharedDtor();
}

void requestLine::SharedDtor() {
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pathtoresource_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  httpversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void requestLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* requestLine::descriptor() {
  ::protobuf_httpRequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_httpRequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const requestLine& requestLine::default_instance() {
  ::protobuf_httpRequest_2eproto::InitDefaultsrequestLine();
  return *internal_default_instance();
}

requestLine* requestLine::New(::google::protobuf::Arena* arena) const {
  requestLine* n = new requestLine;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void requestLine::Clear() {
// @@protoc_insertion_point(message_clear_start:networkLearn.requestLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pathtoresource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  httpversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool requestLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:networkLearn.requestLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string method = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), static_cast<int>(this->method().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "networkLearn.requestLine.method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pathToResource = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pathtoresource()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pathtoresource().data(), static_cast<int>(this->pathtoresource().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "networkLearn.requestLine.pathToResource"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string httpVersion = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_httpversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->httpversion().data(), static_cast<int>(this->httpversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "networkLearn.requestLine.httpVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:networkLearn.requestLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:networkLearn.requestLine)
  return false;
#undef DO_
}

void requestLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:networkLearn.requestLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "networkLearn.requestLine.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->method(), output);
  }

  // string pathToResource = 2;
  if (this->pathtoresource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pathtoresource().data(), static_cast<int>(this->pathtoresource().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "networkLearn.requestLine.pathToResource");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pathtoresource(), output);
  }

  // string httpVersion = 3;
  if (this->httpversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->httpversion().data(), static_cast<int>(this->httpversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "networkLearn.requestLine.httpVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->httpversion(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:networkLearn.requestLine)
}

::google::protobuf::uint8* requestLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:networkLearn.requestLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "networkLearn.requestLine.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->method(), target);
  }

  // string pathToResource = 2;
  if (this->pathtoresource().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pathtoresource().data(), static_cast<int>(this->pathtoresource().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "networkLearn.requestLine.pathToResource");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pathtoresource(), target);
  }

  // string httpVersion = 3;
  if (this->httpversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->httpversion().data(), static_cast<int>(this->httpversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "networkLearn.requestLine.httpVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->httpversion(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:networkLearn.requestLine)
  return target;
}

size_t requestLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:networkLearn.requestLine)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string method = 1;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // string pathToResource = 2;
  if (this->pathtoresource().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pathtoresource());
  }

  // string httpVersion = 3;
  if (this->httpversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->httpversion());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void requestLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:networkLearn.requestLine)
  GOOGLE_DCHECK_NE(&from, this);
  const requestLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const requestLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:networkLearn.requestLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:networkLearn.requestLine)
    MergeFrom(*source);
  }
}

void requestLine::MergeFrom(const requestLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:networkLearn.requestLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.pathtoresource().size() > 0) {

    pathtoresource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pathtoresource_);
  }
  if (from.httpversion().size() > 0) {

    httpversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.httpversion_);
  }
}

void requestLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:networkLearn.requestLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void requestLine::CopyFrom(const requestLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:networkLearn.requestLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool requestLine::IsInitialized() const {
  return true;
}

void requestLine::Swap(requestLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void requestLine::InternalSwap(requestLine* other) {
  using std::swap;
  method_.Swap(&other->method_);
  pathtoresource_.Swap(&other->pathtoresource_);
  httpversion_.Swap(&other->httpversion_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata requestLine::GetMetadata() const {
  protobuf_httpRequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_httpRequest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void requestHead::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int requestHead::kHeadTempFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

requestHead::requestHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_httpRequest_2eproto::InitDefaultsrequestHead();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:networkLearn.requestHead)
}
requestHead::requestHead(const requestHead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  headtemp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.headtemp().size() > 0) {
    headtemp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headtemp_);
  }
  // @@protoc_insertion_point(copy_constructor:networkLearn.requestHead)
}

void requestHead::SharedCtor() {
  headtemp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

requestHead::~requestHead() {
  // @@protoc_insertion_point(destructor:networkLearn.requestHead)
  SharedDtor();
}

void requestHead::SharedDtor() {
  headtemp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void requestHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* requestHead::descriptor() {
  ::protobuf_httpRequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_httpRequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const requestHead& requestHead::default_instance() {
  ::protobuf_httpRequest_2eproto::InitDefaultsrequestHead();
  return *internal_default_instance();
}

requestHead* requestHead::New(::google::protobuf::Arena* arena) const {
  requestHead* n = new requestHead;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void requestHead::Clear() {
// @@protoc_insertion_point(message_clear_start:networkLearn.requestHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  headtemp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool requestHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:networkLearn.requestHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string headTemp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headtemp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->headtemp().data(), static_cast<int>(this->headtemp().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "networkLearn.requestHead.headTemp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:networkLearn.requestHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:networkLearn.requestHead)
  return false;
#undef DO_
}

void requestHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:networkLearn.requestHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string headTemp = 1;
  if (this->headtemp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->headtemp().data(), static_cast<int>(this->headtemp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "networkLearn.requestHead.headTemp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->headtemp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:networkLearn.requestHead)
}

::google::protobuf::uint8* requestHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:networkLearn.requestHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string headTemp = 1;
  if (this->headtemp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->headtemp().data(), static_cast<int>(this->headtemp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "networkLearn.requestHead.headTemp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->headtemp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:networkLearn.requestHead)
  return target;
}

size_t requestHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:networkLearn.requestHead)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string headTemp = 1;
  if (this->headtemp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->headtemp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void requestHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:networkLearn.requestHead)
  GOOGLE_DCHECK_NE(&from, this);
  const requestHead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const requestHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:networkLearn.requestHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:networkLearn.requestHead)
    MergeFrom(*source);
  }
}

void requestHead::MergeFrom(const requestHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:networkLearn.requestHead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.headtemp().size() > 0) {

    headtemp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headtemp_);
  }
}

void requestHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:networkLearn.requestHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void requestHead::CopyFrom(const requestHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:networkLearn.requestHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool requestHead::IsInitialized() const {
  return true;
}

void requestHead::Swap(requestHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void requestHead::InternalSwap(requestHead* other) {
  using std::swap;
  headtemp_.Swap(&other->headtemp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata requestHead::GetMetadata() const {
  protobuf_httpRequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_httpRequest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void mainContent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mainContent::kBodyTempFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mainContent::mainContent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_httpRequest_2eproto::InitDefaultsmainContent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:networkLearn.mainContent)
}
mainContent::mainContent(const mainContent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bodytemp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bodytemp().size() > 0) {
    bodytemp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bodytemp_);
  }
  // @@protoc_insertion_point(copy_constructor:networkLearn.mainContent)
}

void mainContent::SharedCtor() {
  bodytemp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

mainContent::~mainContent() {
  // @@protoc_insertion_point(destructor:networkLearn.mainContent)
  SharedDtor();
}

void mainContent::SharedDtor() {
  bodytemp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void mainContent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* mainContent::descriptor() {
  ::protobuf_httpRequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_httpRequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const mainContent& mainContent::default_instance() {
  ::protobuf_httpRequest_2eproto::InitDefaultsmainContent();
  return *internal_default_instance();
}

mainContent* mainContent::New(::google::protobuf::Arena* arena) const {
  mainContent* n = new mainContent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void mainContent::Clear() {
// @@protoc_insertion_point(message_clear_start:networkLearn.mainContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bodytemp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool mainContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:networkLearn.mainContent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string bodyTemp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bodytemp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bodytemp().data(), static_cast<int>(this->bodytemp().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "networkLearn.mainContent.bodyTemp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:networkLearn.mainContent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:networkLearn.mainContent)
  return false;
#undef DO_
}

void mainContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:networkLearn.mainContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bodyTemp = 1;
  if (this->bodytemp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bodytemp().data(), static_cast<int>(this->bodytemp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "networkLearn.mainContent.bodyTemp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bodytemp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:networkLearn.mainContent)
}

::google::protobuf::uint8* mainContent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:networkLearn.mainContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bodyTemp = 1;
  if (this->bodytemp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bodytemp().data(), static_cast<int>(this->bodytemp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "networkLearn.mainContent.bodyTemp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bodytemp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:networkLearn.mainContent)
  return target;
}

size_t mainContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:networkLearn.mainContent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string bodyTemp = 1;
  if (this->bodytemp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bodytemp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void mainContent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:networkLearn.mainContent)
  GOOGLE_DCHECK_NE(&from, this);
  const mainContent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const mainContent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:networkLearn.mainContent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:networkLearn.mainContent)
    MergeFrom(*source);
  }
}

void mainContent::MergeFrom(const mainContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:networkLearn.mainContent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bodytemp().size() > 0) {

    bodytemp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bodytemp_);
  }
}

void mainContent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:networkLearn.mainContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mainContent::CopyFrom(const mainContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:networkLearn.mainContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mainContent::IsInitialized() const {
  return true;
}

void mainContent::Swap(mainContent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mainContent::InternalSwap(mainContent* other) {
  using std::swap;
  bodytemp_.Swap(&other->bodytemp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata mainContent::GetMetadata() const {
  protobuf_httpRequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_httpRequest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void httpRequest::InitAsDefaultInstance() {
  ::networkLearn::_httpRequest_default_instance_._instance.get_mutable()->resline_ = const_cast< ::networkLearn::requestLine*>(
      ::networkLearn::requestLine::internal_default_instance());
  ::networkLearn::_httpRequest_default_instance_._instance.get_mutable()->reshead_ = const_cast< ::networkLearn::requestHead*>(
      ::networkLearn::requestHead::internal_default_instance());
  ::networkLearn::_httpRequest_default_instance_._instance.get_mutable()->body_ = const_cast< ::networkLearn::mainContent*>(
      ::networkLearn::mainContent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int httpRequest::kResLineFieldNumber;
const int httpRequest::kResHeadFieldNumber;
const int httpRequest::kCRLFFieldNumber;
const int httpRequest::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

httpRequest::httpRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_httpRequest_2eproto::InitDefaultshttpRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:networkLearn.httpRequest)
}
httpRequest::httpRequest(const httpRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  crlf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.crlf().size() > 0) {
    crlf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crlf_);
  }
  if (from.has_resline()) {
    resline_ = new ::networkLearn::requestLine(*from.resline_);
  } else {
    resline_ = NULL;
  }
  if (from.has_reshead()) {
    reshead_ = new ::networkLearn::requestHead(*from.reshead_);
  } else {
    reshead_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::networkLearn::mainContent(*from.body_);
  } else {
    body_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:networkLearn.httpRequest)
}

void httpRequest::SharedCtor() {
  crlf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&resline_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_) -
      reinterpret_cast<char*>(&resline_)) + sizeof(body_));
  _cached_size_ = 0;
}

httpRequest::~httpRequest() {
  // @@protoc_insertion_point(destructor:networkLearn.httpRequest)
  SharedDtor();
}

void httpRequest::SharedDtor() {
  crlf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete resline_;
  if (this != internal_default_instance()) delete reshead_;
  if (this != internal_default_instance()) delete body_;
}

void httpRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* httpRequest::descriptor() {
  ::protobuf_httpRequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_httpRequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const httpRequest& httpRequest::default_instance() {
  ::protobuf_httpRequest_2eproto::InitDefaultshttpRequest();
  return *internal_default_instance();
}

httpRequest* httpRequest::New(::google::protobuf::Arena* arena) const {
  httpRequest* n = new httpRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void httpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:networkLearn.httpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crlf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && resline_ != NULL) {
    delete resline_;
  }
  resline_ = NULL;
  if (GetArenaNoVirtual() == NULL && reshead_ != NULL) {
    delete reshead_;
  }
  reshead_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  _internal_metadata_.Clear();
}

bool httpRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:networkLearn.httpRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .networkLearn.requestLine resLine = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resline()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .networkLearn.requestHead resHead = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reshead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CRLF = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_crlf()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->crlf().data(), static_cast<int>(this->crlf().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "networkLearn.httpRequest.CRLF"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .networkLearn.mainContent body = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:networkLearn.httpRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:networkLearn.httpRequest)
  return false;
#undef DO_
}

void httpRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:networkLearn.httpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .networkLearn.requestLine resLine = 1;
  if (this->has_resline()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->resline_, output);
  }

  // .networkLearn.requestHead resHead = 2;
  if (this->has_reshead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->reshead_, output);
  }

  // string CRLF = 3;
  if (this->crlf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crlf().data(), static_cast<int>(this->crlf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "networkLearn.httpRequest.CRLF");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->crlf(), output);
  }

  // .networkLearn.mainContent body = 4;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->body_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:networkLearn.httpRequest)
}

::google::protobuf::uint8* httpRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:networkLearn.httpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .networkLearn.requestLine resLine = 1;
  if (this->has_resline()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->resline_, deterministic, target);
  }

  // .networkLearn.requestHead resHead = 2;
  if (this->has_reshead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->reshead_, deterministic, target);
  }

  // string CRLF = 3;
  if (this->crlf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crlf().data(), static_cast<int>(this->crlf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "networkLearn.httpRequest.CRLF");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->crlf(), target);
  }

  // .networkLearn.mainContent body = 4;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->body_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:networkLearn.httpRequest)
  return target;
}

size_t httpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:networkLearn.httpRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string CRLF = 3;
  if (this->crlf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->crlf());
  }

  // .networkLearn.requestLine resLine = 1;
  if (this->has_resline()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resline_);
  }

  // .networkLearn.requestHead resHead = 2;
  if (this->has_reshead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->reshead_);
  }

  // .networkLearn.mainContent body = 4;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->body_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void httpRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:networkLearn.httpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const httpRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const httpRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:networkLearn.httpRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:networkLearn.httpRequest)
    MergeFrom(*source);
  }
}

void httpRequest::MergeFrom(const httpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:networkLearn.httpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.crlf().size() > 0) {

    crlf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crlf_);
  }
  if (from.has_resline()) {
    mutable_resline()->::networkLearn::requestLine::MergeFrom(from.resline());
  }
  if (from.has_reshead()) {
    mutable_reshead()->::networkLearn::requestHead::MergeFrom(from.reshead());
  }
  if (from.has_body()) {
    mutable_body()->::networkLearn::mainContent::MergeFrom(from.body());
  }
}

void httpRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:networkLearn.httpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void httpRequest::CopyFrom(const httpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:networkLearn.httpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool httpRequest::IsInitialized() const {
  return true;
}

void httpRequest::Swap(httpRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void httpRequest::InternalSwap(httpRequest* other) {
  using std::swap;
  crlf_.Swap(&other->crlf_);
  swap(resline_, other->resline_);
  swap(reshead_, other->reshead_);
  swap(body_, other->body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata httpRequest::GetMetadata() const {
  protobuf_httpRequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_httpRequest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace networkLearn

// @@protoc_insertion_point(global_scope)
